{"version":3,"file":"application.js","sourceRoot":"","sources":["../src/application.ts"],"names":[],"mappings":";;;AAAA,0BAA0B;AAC1B,iCAAiC;AACjC,+BAA+B;AAE/B,MAAM,WAAW;IAAjB;QACU,kBAAa,GAAe,EAAE,CAAC;QAC/B,qBAAgB,GAAe,EAAE,CAAC;IAqC5C,CAAC;IAnCC,OAAO,CAAC,OAAiB;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,UAAU,CAAC,OAAiB;QAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,KAAK;QACH,iDAAiD;QACjD,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;YACxB,OAAO,CAAC,IAAI,CAAC,gCAAgC,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;YACzE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,+BAA+B;QAC/B,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;YACzB,OAAO,CAAC,IAAI,CAAC,iCAAiC,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;YAC1E,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;aACzD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;aACjE,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aAC5D,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;aAC1B,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;YACtB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC9B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;CACF;AAEY,QAAA,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC","sourcesContent":["/* istanbul ignore file */\nimport * as config from 'config';\nimport * as Raven from 'raven';\n\nclass Application {\n  private startHandlers: Function[] = [];\n  private shutdownHandlers: Function[] = [];\n\n  onStart(handler: Function) {\n    this.startHandlers.push(handler);\n  }\n\n  onShutdown(handler: Function) {\n    this.shutdownHandlers.push(handler);\n  }\n\n  start() {\n    // quit on ctrl-c when running docker in terminal\n    process.on('SIGINT', () => {\n      console.info('Got SIGINT. Graceful shutdown ', new Date().toISOString());\n      this.shutdown();\n    });\n    // quit properly on docker stop\n    process.on('SIGTERM', () => {\n      console.info('Got SIGTERM. Graceful shutdown ', new Date().toISOString());\n      this.shutdown();\n    });\n    console.log(`Starting ${config.get('appName')}`);\n    this.startHandlers.forEach(handler => handler());\n  }\n\n  shutdown() {\n    console.log(`Shutting down ${config.get('appName')}`);\n    Promise.all(this.shutdownHandlers.map(handler => handler()))\n      .then(results => results.forEach(message => console.log(message)))\n      .then(() => console.log(`${config.get('appName')} stopped!`))\n      .then(() => process.exit())\n      .catch((error: Error) => {\n        console.error(error);\n        Raven.captureException(error);\n        process.exit(1);\n      });\n  }\n}\n\nexport const application = new Application();\n"]}