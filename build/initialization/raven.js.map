{"version":3,"file":"raven.js","sourceRoot":"","sources":["../../src/initialization/raven.ts"],"names":[],"mappings":";;AAAA,0BAA0B;AAC1B,+BAA+B;AAC/B,iCAAiC;AAEjC,MAAM,UAAU,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC5E,MAAM,IAAI,GAAG,CAAC,OAAe,EAAE,EAAE,GAAG,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,MAAM,aAAa,GAAG,GAAG,EAAE,CACzB,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;AAEtF,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;IACvD,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;IAClD,eAAe,EAAE,IAAI;IACrB,0BAA0B,EAAE,IAAI;CACjC,CAAC,CAAC,OAAO,EAAE,CAAC","sourcesContent":["/* istanbul ignore file */\nimport * as Raven from 'raven';\nimport * as config from 'config';\n\nconst enabledFor = (env: string) => ['production', 'staging'].includes(env);\nconst fail = (message: string) => { throw new Error(message); };\nconst activateRaven = () =>\n  enabledFor(config.util.getEnv('NODE_CONFIG_ENV') || fail('NODE_ENV should be set'));\n\nRaven.config(activateRaven() && config.get('raven.dsn'), {\n  environment: config.util.getEnv('NODE_CONFIG_ENV'),\n  autoBreadcrumbs: true,\n  captureUnhandledRejections: true\n}).install();\n"]}