{"version":3,"file":"datadog.js","sourceRoot":"","sources":["../../src/initialization/datadog.ts"],"names":[],"mappings":";;;AAAA,0BAA0B;AAC1B,uCAAqD;AACrD,iCAAiC;AACjC,2CAA2C;AAE3C,MAAM,UAAU,GAAkB;IAChC,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC;IAC9B,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;IAChC,YAAY,EAAE,IAAI;IAClB,IAAI,EAAE;QACJ,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;QACxC,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC;QAC9B,WAAW,EAAE,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC;KACnC;CACF,CAAC;AAEF,MAAM,gBAAgB,GAAG,GAAkB,EAAE;IAC3C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE;QAC9B,uCACK,UAAU,KACb,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,IAC7E;KACH;IACD,uCACK,UAAU,KACb,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IACnC;AACJ,CAAC,CAAC;AAEW,QAAA,MAAM,GAAG,kBAAU,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAE1D,WAAW,CAAC,gBAAgB,CAAC,cAAM,CAAC,CAAC","sourcesContent":["/* istanbul ignore file */\nimport TraceProxy, { TracerOptions } from 'dd-trace';\nimport * as config from 'config';\nimport * as opentracing from 'opentracing';\n\nconst baseConfig: TracerOptions = {\n  service: config.get('appName'),\n  env: process.env.NODE_CONFIG_ENV,\n  logInjection: true,\n  tags: {\n    environment: process.env.NODE_CONFIG_ENV,\n    project: config.get('appName'),\n    serviceName: config.get('appName')\n  }\n};\n\nconst getDatadogConfig = (): TracerOptions => {\n  if (!process.env.DD_AGENT_HOST) {\n    return {\n      ...baseConfig,\n      debug: false,\n      hostname: config.has('datadog.host') ? config.get('datadog.host') : 'datadog'\n    };\n  }\n  return {\n    ...baseConfig,\n    hostname: process.env.DD_AGENT_HOST\n  };\n};\n\nexport const tracer = TraceProxy.init(getDatadogConfig());\n\nopentracing.initGlobalTracer(tracer);\n"]}